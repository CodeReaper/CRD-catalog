{
  "properties": {
    "apiVersion": {
      "type": "string"
    },
    "kind": {
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "additionalProperties": false,
      "properties": {
        "policy": {
          "additionalProperties": false,
          "properties": {
            "rootOfTrust": {
              "additionalProperties": false,
              "properties": {
                "fulcioCAWithRekor": {
                  "additionalProperties": false,
                  "properties": {
                    "fulcioCAData": {
                      "format": "byte",
                      "maxLength": 8192,
                      "type": "string"
                    },
                    "fulcioSubject": {
                      "additionalProperties": false,
                      "properties": {
                        "oidcIssuer": {
                          "type": "string",
                          "x-kubernetes-validations": [
                            {
                              "message": "oidcIssuer must be a valid URL",
                              "rule": "isURL(self)"
                            }
                          ]
                        },
                        "signedEmail": {
                          "type": "string",
                          "x-kubernetes-validations": [
                            {
                              "message": "invalid email address",
                              "rule": "self.matches('^\\\\S+@\\\\S+$')"
                            }
                          ]
                        }
                      },
                      "required": [
                        "oidcIssuer",
                        "signedEmail"
                      ],
                      "type": "object"
                    },
                    "rekorKeyData": {
                      "format": "byte",
                      "maxLength": 8192,
                      "type": "string"
                    }
                  },
                  "required": [
                    "fulcioCAData",
                    "fulcioSubject",
                    "rekorKeyData"
                  ],
                  "type": "object"
                },
                "policyType": {
                  "enum": [
                    "PublicKey",
                    "FulcioCAWithRekor"
                  ],
                  "type": "string"
                },
                "publicKey": {
                  "additionalProperties": false,
                  "properties": {
                    "keyData": {
                      "format": "byte",
                      "maxLength": 8192,
                      "type": "string"
                    },
                    "rekorKeyData": {
                      "format": "byte",
                      "maxLength": 8192,
                      "type": "string"
                    }
                  },
                  "required": [
                    "keyData"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "policyType"
              ],
              "type": "object",
              "x-kubernetes-validations": [
                {
                  "message": "publicKey is required when policyType is PublicKey, and forbidden otherwise",
                  "rule": "has(self.policyType) && self.policyType == 'PublicKey' ? has(self.publicKey) : !has(self.publicKey)"
                },
                {
                  "message": "fulcioCAWithRekor is required when policyType is FulcioCAWithRekor, and forbidden otherwise",
                  "rule": "has(self.policyType) && self.policyType == 'FulcioCAWithRekor' ? has(self.fulcioCAWithRekor) : !has(self.fulcioCAWithRekor)"
                }
              ]
            },
            "signedIdentity": {
              "additionalProperties": false,
              "properties": {
                "exactRepository": {
                  "additionalProperties": false,
                  "properties": {
                    "repository": {
                      "maxLength": 512,
                      "type": "string",
                      "x-kubernetes-validations": [
                        {
                          "message": "invalid repository or prefix in the signedIdentity, should not include the tag or digest",
                          "rule": "self.matches('.*:([\\\\w][\\\\w.-]{0,127})$')? self.matches('^(localhost:[0-9]+)$'): true"
                        },
                        {
                          "message": "invalid repository or prefix in the signedIdentity",
                          "rule": "self.matches('^(((?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])(?:\\\\.(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]))+(?::[0-9]+)?)|(localhost(?::[0-9]+)?))(?:(?:/[a-z0-9]+(?:(?:(?:[._]|__|[-]*)[a-z0-9]+)+)?)+)?$')"
                        }
                      ]
                    }
                  },
                  "required": [
                    "repository"
                  ],
                  "type": "object"
                },
                "matchPolicy": {
                  "enum": [
                    "MatchRepoDigestOrExact",
                    "MatchRepository",
                    "ExactRepository",
                    "RemapIdentity"
                  ],
                  "type": "string"
                },
                "remapIdentity": {
                  "additionalProperties": false,
                  "properties": {
                    "prefix": {
                      "maxLength": 512,
                      "type": "string",
                      "x-kubernetes-validations": [
                        {
                          "message": "invalid repository or prefix in the signedIdentity, should not include the tag or digest",
                          "rule": "self.matches('.*:([\\\\w][\\\\w.-]{0,127})$')? self.matches('^(localhost:[0-9]+)$'): true"
                        },
                        {
                          "message": "invalid repository or prefix in the signedIdentity",
                          "rule": "self.matches('^(((?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])(?:\\\\.(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]))+(?::[0-9]+)?)|(localhost(?::[0-9]+)?))(?:(?:/[a-z0-9]+(?:(?:(?:[._]|__|[-]*)[a-z0-9]+)+)?)+)?$')"
                        }
                      ]
                    },
                    "signedPrefix": {
                      "maxLength": 512,
                      "type": "string",
                      "x-kubernetes-validations": [
                        {
                          "message": "invalid repository or prefix in the signedIdentity, should not include the tag or digest",
                          "rule": "self.matches('.*:([\\\\w][\\\\w.-]{0,127})$')? self.matches('^(localhost:[0-9]+)$'): true"
                        },
                        {
                          "message": "invalid repository or prefix in the signedIdentity",
                          "rule": "self.matches('^(((?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])(?:\\\\.(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]))+(?::[0-9]+)?)|(localhost(?::[0-9]+)?))(?:(?:/[a-z0-9]+(?:(?:(?:[._]|__|[-]*)[a-z0-9]+)+)?)+)?$')"
                        }
                      ]
                    }
                  },
                  "required": [
                    "prefix",
                    "signedPrefix"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "matchPolicy"
              ],
              "type": "object",
              "x-kubernetes-validations": [
                {
                  "message": "exactRepository is required when matchPolicy is ExactRepository, and forbidden otherwise",
                  "rule": "(has(self.matchPolicy) && self.matchPolicy == 'ExactRepository') ? has(self.exactRepository) : !has(self.exactRepository)"
                },
                {
                  "message": "remapIdentity is required when matchPolicy is RemapIdentity, and forbidden otherwise",
                  "rule": "(has(self.matchPolicy) && self.matchPolicy == 'RemapIdentity') ? has(self.remapIdentity) : !has(self.remapIdentity)"
                }
              ]
            }
          },
          "required": [
            "rootOfTrust"
          ],
          "type": "object"
        },
        "scopes": {
          "items": {
            "maxLength": 512,
            "type": "string",
            "x-kubernetes-validations": [
              {
                "message": "invalid image scope format, scope must contain a fully qualified domain name or 'localhost'",
                "rule": "size(self.split('/')[0].split('.')) == 1 ? self.split('/')[0].split('.')[0].split(':')[0] == 'localhost' : true"
              },
              {
                "message": "invalid image scope with wildcard, a wildcard can only be at the start of the domain and is only supported for subdomain matching, not path matching",
                "rule": "self.contains('*') ? self.matches('^\\\\*(?:\\\\.(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]))+$') : true"
              },
              {
                "message": "invalid repository namespace or image specification in the image scope",
                "rule": "!self.contains('*') ? self.matches('^((((?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])(?:\\\\.(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]))+(?::[0-9]+)?)|(localhost(?::[0-9]+)?))(?:(?:/[a-z0-9]+(?:(?:(?:[._]|__|[-]*)[a-z0-9]+)+)?)+)?)(?::([\\\\w][\\\\w.-]{0,127}))?(?:@([A-Za-z][A-Za-z0-9]*(?:[-_+.][A-Za-z][A-Za-z0-9]*)*[:][[:xdigit:]]{32,}))?$') : true"
              }
            ]
          },
          "maxItems": 256,
          "type": "array",
          "x-kubernetes-list-type": "set"
        }
      },
      "required": [
        "policy",
        "scopes"
      ],
      "type": "object"
    },
    "status": {
      "additionalProperties": false,
      "properties": {
        "conditions": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "lastTransitionTime": {
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        }
      },
      "type": "object"
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
